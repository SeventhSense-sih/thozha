service cloud.firestore {
  match /databases/{database}/documents {
    
    // Rules for 'users' collection
    match /users/{userId} {
      // Allow read for authenticated users
      allow read: if request.auth != null;
      // Allow write only for the authenticated user and admins
      allow write: if request.auth != null && (request.auth.uid == userId || request.auth.token.admin == true);

      // Rules for 'contacts' subcollection under each user
      match /contacts/{contactId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      // Rules for 'userAlerts' subcollection under each user
      match /userAlerts/{alertId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      // Specific rules for location subcollection under each user
      match /location/{sessionId} {
        allow read: if request.auth.uid != null;
        allow write: if request.auth.uid == userId;
      }
    }

    // Rules for 'alerts' collection
    match /alerts/{alertId} {
      // Allowing all authenticated users to read alerts
      allow read: if request.auth != null;
      // Allow authenticated users to write to alerts collection
      allow write: if request.auth != null;
    }
    
    // Rules for 'verifications' collection
    match /verifications/{userId} {
      // Allow read for the user and admins
      allow read: if request.auth != null && (request.auth.uid == userId || request.auth.token.admin == true);
      // Allow write for the user (to submit documents) and admins (to update status)
      allow write: if request.auth != null && (request.auth.uid == userId || request.auth.token.admin == true);
    }
    
    // Rules for 'admins' collection
    match /admins/{adminId} {
      allow read, write: if request.auth != null && request.auth.token.admin == true;
    }
  }
}
